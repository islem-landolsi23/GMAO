#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TEST
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BaseProjet")]
	public partial class ProjetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertmachine(machine instance);
    partial void Updatemachine(machine instance);
    partial void Deletemachine(machine instance);
    partial void InsertPann_Machine(Pann_Machine instance);
    partial void UpdatePann_Machine(Pann_Machine instance);
    partial void DeletePann_Machine(Pann_Machine instance);
    partial void InsertPann_time(Pann_time instance);
    partial void UpdatePann_time(Pann_time instance);
    partial void DeletePann_time(Pann_time instance);
    partial void InsertPiece_de_rechange(Piece_de_rechange instance);
    partial void UpdatePiece_de_rechange(Piece_de_rechange instance);
    partial void DeletePiece_de_rechange(Piece_de_rechange instance);
    partial void InsertPlaning_mantenance(Planing_mantenance instance);
    partial void UpdatePlaning_mantenance(Planing_mantenance instance);
    partial void DeletePlaning_mantenance(Planing_mantenance instance);
    partial void InsertTable_Panne(Table_Panne instance);
    partial void UpdateTable_Panne(Table_Panne instance);
    partial void DeleteTable_Panne(Table_Panne instance);
    partial void Inserttravaux(travaux instance);
    partial void Updatetravaux(travaux instance);
    partial void Deletetravaux(travaux instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void Insertbon_srt(bon_srt instance);
    partial void Updatebon_srt(bon_srt instance);
    partial void Deletebon_srt(bon_srt instance);
    partial void Insertpiece_bon(piece_bon instance);
    partial void Updatepiece_bon(piece_bon instance);
    partial void Deletepiece_bon(piece_bon instance);
    #endregion
		
		public ProjetDataContext() : 
				base(global::TEST.Properties.Settings.Default.BaseProjetConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<machine> machine
		{
			get
			{
				return this.GetTable<machine>();
			}
		}
		
		public System.Data.Linq.Table<Pann_Machine> Pann_Machine
		{
			get
			{
				return this.GetTable<Pann_Machine>();
			}
		}
		
		public System.Data.Linq.Table<Pann_time> Pann_time
		{
			get
			{
				return this.GetTable<Pann_time>();
			}
		}
		
		public System.Data.Linq.Table<Piece_de_rechange> Piece_de_rechange
		{
			get
			{
				return this.GetTable<Piece_de_rechange>();
			}
		}
		
		public System.Data.Linq.Table<Planing_mantenance> Planing_mantenance
		{
			get
			{
				return this.GetTable<Planing_mantenance>();
			}
		}
		
		public System.Data.Linq.Table<Table_Panne> Table_Panne
		{
			get
			{
				return this.GetTable<Table_Panne>();
			}
		}
		
		public System.Data.Linq.Table<travaux> travaux
		{
			get
			{
				return this.GetTable<travaux>();
			}
		}
		
		public System.Data.Linq.Table<USER> USER
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<bon_srt> bon_srt
		{
			get
			{
				return this.GetTable<bon_srt>();
			}
		}
		
		public System.Data.Linq.Table<piece_bon> piece_bon
		{
			get
			{
				return this.GetTable<piece_bon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.machine")]
	public partial class machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOM;
		
		private string _equipement;
		
		private string _UNITE;
		
		private string _REFERENCE;
		
		private int _PANNE;
		
		private System.Data.Linq.Binary _IMAGE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMChanging(string value);
    partial void OnNOMChanged();
    partial void OnequipementChanging(string value);
    partial void OnequipementChanged();
    partial void OnUNITEChanging(string value);
    partial void OnUNITEChanged();
    partial void OnREFERENCEChanging(string value);
    partial void OnREFERENCEChanged();
    partial void OnPANNEChanging(int value);
    partial void OnPANNEChanged();
    partial void OnIMAGEChanging(System.Data.Linq.Binary value);
    partial void OnIMAGEChanged();
    #endregion
		
		public machine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOM
		{
			get
			{
				return this._NOM;
			}
			set
			{
				if ((this._NOM != value))
				{
					this.OnNOMChanging(value);
					this.SendPropertyChanging();
					this._NOM = value;
					this.SendPropertyChanged("NOM");
					this.OnNOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipement", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string equipement
		{
			get
			{
				return this._equipement;
			}
			set
			{
				if ((this._equipement != value))
				{
					this.OnequipementChanging(value);
					this.SendPropertyChanging();
					this._equipement = value;
					this.SendPropertyChanged("equipement");
					this.OnequipementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNITE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UNITE
		{
			get
			{
				return this._UNITE;
			}
			set
			{
				if ((this._UNITE != value))
				{
					this.OnUNITEChanging(value);
					this.SendPropertyChanging();
					this._UNITE = value;
					this.SendPropertyChanged("UNITE");
					this.OnUNITEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REFERENCE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string REFERENCE
		{
			get
			{
				return this._REFERENCE;
			}
			set
			{
				if ((this._REFERENCE != value))
				{
					this.OnREFERENCEChanging(value);
					this.SendPropertyChanging();
					this._REFERENCE = value;
					this.SendPropertyChanged("REFERENCE");
					this.OnREFERENCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PANNE", DbType="Int NOT NULL")]
		public int PANNE
		{
			get
			{
				return this._PANNE;
			}
			set
			{
				if ((this._PANNE != value))
				{
					this.OnPANNEChanging(value);
					this.SendPropertyChanging();
					this._PANNE = value;
					this.SendPropertyChanged("PANNE");
					this.OnPANNEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary IMAGE
		{
			get
			{
				return this._IMAGE;
			}
			set
			{
				if ((this._IMAGE != value))
				{
					this.OnIMAGEChanging(value);
					this.SendPropertyChanging();
					this._IMAGE = value;
					this.SendPropertyChanged("IMAGE");
					this.OnIMAGEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pann_Machine")]
	public partial class Pann_Machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _machin;
		
		private int _nbr_pann;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmachinChanging(string value);
    partial void OnmachinChanged();
    partial void Onnbr_pannChanging(int value);
    partial void Onnbr_pannChanged();
    #endregion
		
		public Pann_Machine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machin
		{
			get
			{
				return this._machin;
			}
			set
			{
				if ((this._machin != value))
				{
					this.OnmachinChanging(value);
					this.SendPropertyChanging();
					this._machin = value;
					this.SendPropertyChanged("machin");
					this.OnmachinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[nbr-pann]", Storage="_nbr_pann", DbType="Int NOT NULL")]
		public int nbr_pann
		{
			get
			{
				return this._nbr_pann;
			}
			set
			{
				if ((this._nbr_pann != value))
				{
					this.Onnbr_pannChanging(value);
					this.SendPropertyChanging();
					this._nbr_pann = value;
					this.SendPropertyChanged("nbr_pann");
					this.Onnbr_pannChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pann_time")]
	public partial class Pann_time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _machin;
		
		private System.Nullable<System.DateTime> _date_s;
		
		private System.Nullable<System.DateTime> _date_f;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmachinChanging(string value);
    partial void OnmachinChanged();
    partial void Ondate_sChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sChanged();
    partial void Ondate_fChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_fChanged();
    #endregion
		
		public Pann_time()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machin
		{
			get
			{
				return this._machin;
			}
			set
			{
				if ((this._machin != value))
				{
					this.OnmachinChanging(value);
					this.SendPropertyChanging();
					this._machin = value;
					this.SendPropertyChanged("machin");
					this.OnmachinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_s", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_s
		{
			get
			{
				return this._date_s;
			}
			set
			{
				if ((this._date_s != value))
				{
					this.Ondate_sChanging(value);
					this.SendPropertyChanging();
					this._date_s = value;
					this.SendPropertyChanged("date_s");
					this.Ondate_sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_f", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_f
		{
			get
			{
				return this._date_f;
			}
			set
			{
				if ((this._date_f != value))
				{
					this.Ondate_fChanging(value);
					this.SendPropertyChanging();
					this._date_f = value;
					this.SendPropertyChanged("date_f");
					this.Ondate_fChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Piece_de_rechange")]
	public partial class Piece_de_rechange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _REF;
		
		private int _prix;
		
		private int _quantite;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnREFChanging(string value);
    partial void OnREFChanged();
    partial void OnprixChanging(int value);
    partial void OnprixChanged();
    partial void OnquantiteChanging(int value);
    partial void OnquantiteChanged();
    #endregion
		
		public Piece_de_rechange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string REF
		{
			get
			{
				return this._REF;
			}
			set
			{
				if ((this._REF != value))
				{
					this.OnREFChanging(value);
					this.SendPropertyChanging();
					this._REF = value;
					this.SendPropertyChanged("REF");
					this.OnREFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Int NOT NULL")]
		public int prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantite", DbType="Int NOT NULL")]
		public int quantite
		{
			get
			{
				return this._quantite;
			}
			set
			{
				if ((this._quantite != value))
				{
					this.OnquantiteChanging(value);
					this.SendPropertyChanging();
					this._quantite = value;
					this.SendPropertyChanged("quantite");
					this.OnquantiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planing_mantenance")]
	public partial class Planing_mantenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PL;
		
		private int _frequrnce;
		
		private string _machine;
		
		private System.Nullable<System.DateTime> _date_mant;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPLChanging(string value);
    partial void OnPLChanged();
    partial void OnfrequrnceChanging(int value);
    partial void OnfrequrnceChanged();
    partial void OnmachineChanging(string value);
    partial void OnmachineChanged();
    partial void Ondate_mantChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_mantChanged();
    #endregion
		
		public Planing_mantenance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PL
		{
			get
			{
				return this._PL;
			}
			set
			{
				if ((this._PL != value))
				{
					this.OnPLChanging(value);
					this.SendPropertyChanging();
					this._PL = value;
					this.SendPropertyChanged("PL");
					this.OnPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequrnce", DbType="Int NOT NULL")]
		public int frequrnce
		{
			get
			{
				return this._frequrnce;
			}
			set
			{
				if ((this._frequrnce != value))
				{
					this.OnfrequrnceChanging(value);
					this.SendPropertyChanging();
					this._frequrnce = value;
					this.SendPropertyChanged("frequrnce");
					this.OnfrequrnceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machine
		{
			get
			{
				return this._machine;
			}
			set
			{
				if ((this._machine != value))
				{
					this.OnmachineChanging(value);
					this.SendPropertyChanging();
					this._machine = value;
					this.SendPropertyChanged("machine");
					this.OnmachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_mant", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_mant
		{
			get
			{
				return this._date_mant;
			}
			set
			{
				if ((this._date_mant != value))
				{
					this.Ondate_mantChanging(value);
					this.SendPropertyChanging();
					this._date_mant = value;
					this.SendPropertyChanged("date_mant");
					this.Ondate_mantChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Panne")]
	public partial class Table_Panne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _machine;
		
		private string _description;
		
		private string _solution;
		
		private System.DateTime _date;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmachineChanging(string value);
    partial void OnmachineChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsolutionChanging(string value);
    partial void OnsolutionChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public Table_Panne()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machine
		{
			get
			{
				return this._machine;
			}
			set
			{
				if ((this._machine != value))
				{
					this.OnmachineChanging(value);
					this.SendPropertyChanging();
					this._machine = value;
					this.SendPropertyChanged("machine");
					this.OnmachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solution", DbType="VarChar(50)")]
		public string solution
		{
			get
			{
				return this._solution;
			}
			set
			{
				if ((this._solution != value))
				{
					this.OnsolutionChanging(value);
					this.SendPropertyChanging();
					this._solution = value;
					this.SendPropertyChanged("solution");
					this.OnsolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.travaux")]
	public partial class travaux : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _machin;
		
		private string _description;
		
		private string _agent;
		
		private int _etat;
		
		private System.DateTime _deadline;
		
		private int _matricule_user;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmachinChanging(string value);
    partial void OnmachinChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnagentChanging(string value);
    partial void OnagentChanged();
    partial void OnetatChanging(int value);
    partial void OnetatChanged();
    partial void OndeadlineChanging(System.DateTime value);
    partial void OndeadlineChanged();
    partial void Onmatricule_userChanging(int value);
    partial void Onmatricule_userChanged();
    #endregion
		
		public travaux()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machin
		{
			get
			{
				return this._machin;
			}
			set
			{
				if ((this._machin != value))
				{
					this.OnmachinChanging(value);
					this.SendPropertyChanging();
					this._machin = value;
					this.SendPropertyChanged("machin");
					this.OnmachinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agent", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string agent
		{
			get
			{
				return this._agent;
			}
			set
			{
				if ((this._agent != value))
				{
					this.OnagentChanging(value);
					this.SendPropertyChanging();
					this._agent = value;
					this.SendPropertyChanged("agent");
					this.OnagentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etat", DbType="Int NOT NULL")]
		public int etat
		{
			get
			{
				return this._etat;
			}
			set
			{
				if ((this._etat != value))
				{
					this.OnetatChanging(value);
					this.SendPropertyChanging();
					this._etat = value;
					this.SendPropertyChanged("etat");
					this.OnetatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deadline", DbType="DateTime NOT NULL")]
		public System.DateTime deadline
		{
			get
			{
				return this._deadline;
			}
			set
			{
				if ((this._deadline != value))
				{
					this.OndeadlineChanging(value);
					this.SendPropertyChanging();
					this._deadline = value;
					this.SendPropertyChanged("deadline");
					this.OndeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricule_user", DbType="Int NOT NULL")]
		public int matricule_user
		{
			get
			{
				return this._matricule_user;
			}
			set
			{
				if ((this._matricule_user != value))
				{
					this.Onmatricule_userChanging(value);
					this.SendPropertyChanging();
					this._matricule_user = value;
					this.SendPropertyChanged("matricule_user");
					this.Onmatricule_userChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _role;
		
		private string _departement;
		
		private string _mdp;
		
		private System.Nullable<int> _matricule;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OndepartementChanging(string value);
    partial void OndepartementChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OnmatriculeChanging(System.Nullable<int> value);
    partial void OnmatriculeChanged();
    #endregion
		
		public USER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departement", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string departement
		{
			get
			{
				return this._departement;
			}
			set
			{
				if ((this._departement != value))
				{
					this.OndepartementChanging(value);
					this.SendPropertyChanging();
					this._departement = value;
					this.SendPropertyChanged("departement");
					this.OndepartementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mdp
		{
			get
			{
				return this._mdp;
			}
			set
			{
				if ((this._mdp != value))
				{
					this.OnmdpChanging(value);
					this.SendPropertyChanging();
					this._mdp = value;
					this.SendPropertyChanged("mdp");
					this.OnmdpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricule", DbType="Int")]
		public System.Nullable<int> matricule
		{
			get
			{
				return this._matricule;
			}
			set
			{
				if ((this._matricule != value))
				{
					this.OnmatriculeChanging(value);
					this.SendPropertyChanging();
					this._matricule = value;
					this.SendPropertyChanged("matricule");
					this.OnmatriculeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bon_srt")]
	public partial class bon_srt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private System.DateTime _date;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public bon_srt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.piece_bon")]
	public partial class piece_bon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _REF;
		
		private int _quantite;
		
		private string _code_bon;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnREFChanging(string value);
    partial void OnREFChanged();
    partial void OnquantiteChanging(int value);
    partial void OnquantiteChanged();
    partial void Oncode_bonChanging(string value);
    partial void Oncode_bonChanged();
    #endregion
		
		public piece_bon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string REF
		{
			get
			{
				return this._REF;
			}
			set
			{
				if ((this._REF != value))
				{
					this.OnREFChanging(value);
					this.SendPropertyChanging();
					this._REF = value;
					this.SendPropertyChanged("REF");
					this.OnREFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantite", DbType="Int NOT NULL")]
		public int quantite
		{
			get
			{
				return this._quantite;
			}
			set
			{
				if ((this._quantite != value))
				{
					this.OnquantiteChanging(value);
					this.SendPropertyChanging();
					this._quantite = value;
					this.SendPropertyChanged("quantite");
					this.OnquantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_bon", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code_bon
		{
			get
			{
				return this._code_bon;
			}
			set
			{
				if ((this._code_bon != value))
				{
					this.Oncode_bonChanging(value);
					this.SendPropertyChanging();
					this._code_bon = value;
					this.SendPropertyChanged("code_bon");
					this.Oncode_bonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
